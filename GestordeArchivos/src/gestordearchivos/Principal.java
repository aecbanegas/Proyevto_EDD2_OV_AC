/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestordearchivos;

import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MBanegas
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        jm_registro.setForeground(Color.GRAY);
        jm_estandarizacion.setForeground(Color.gray);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_Campos = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jb_regresarcampos = new javax.swing.JButton();
        jb_borrarcampo = new javax.swing.JButton();
        jb_listarcampo = new javax.swing.JButton();
        jb_modificarcampo = new javax.swing.JButton();
        jb_agregarcampo = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jd_Registro = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jd_Estandarizacion = new javax.swing.JDialog();
        jLabel3 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jb_cargararchivo = new javax.swing.JButton();
        jb_nuevoarchivo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jm_archivo = new javax.swing.JMenu();
        jm_campos = new javax.swing.JMenuItem();
        jm_registro = new javax.swing.JMenuItem();
        jm_estandarizacion = new javax.swing.JMenuItem();
        jm_guardar = new javax.swing.JMenu();
        jm_exitsave = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        jd_Campos.setSize(new java.awt.Dimension(700, 700));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jb_regresarcampos.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jb_regresarcampos.setText("Regresar");
        jb_regresarcampos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_regresarcamposMouseClicked(evt);
            }
        });
        jb_regresarcampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_regresarcamposActionPerformed(evt);
            }
        });

        jb_borrarcampo.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jb_borrarcampo.setText("Borrar Campos");
        jb_borrarcampo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_borrarcampoMouseClicked(evt);
            }
        });

        jb_listarcampo.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jb_listarcampo.setText("Listar Campos");
        jb_listarcampo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_listarcampoMouseClicked(evt);
            }
        });

        jb_modificarcampo.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jb_modificarcampo.setText("Modificar Campos");
        jb_modificarcampo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_modificarcampoMouseClicked(evt);
            }
        });

        jb_agregarcampo.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jb_agregarcampo.setText("Agregar Campo");
        jb_agregarcampo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_agregarcampoMouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 51, 51));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Menu Campos");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("GESTOR DE BASES DE DATOS OVAC");

        jTable1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Tipo", "Tama√±o", "Llave Unica"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jb_modificarcampo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_listarcampo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_borrarcampo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_regresarcampos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_agregarcampo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jb_agregarcampo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jb_modificarcampo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jb_listarcampo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jb_borrarcampo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jb_regresarcampos, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jd_CamposLayout = new javax.swing.GroupLayout(jd_Campos.getContentPane());
        jd_Campos.getContentPane().setLayout(jd_CamposLayout);
        jd_CamposLayout.setHorizontalGroup(
            jd_CamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_CamposLayout.setVerticalGroup(
            jd_CamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_Registro.setSize(new java.awt.Dimension(700, 700));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("GESTOR DE BASES DE DATOS OVAC");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 51, 51));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Menu Registros");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton1.setText("Indroducir Registro");

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton2.setText("Modificar Registro");

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton3.setText("Listar Registro");

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton4.setText("Buscar Registro");

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton5.setText("Borrar Registro");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jd_RegistroLayout = new javax.swing.GroupLayout(jd_Registro.getContentPane());
        jd_Registro.getContentPane().setLayout(jd_RegistroLayout);
        jd_RegistroLayout.setHorizontalGroup(
            jd_RegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_RegistroLayout.setVerticalGroup(
            jd_RegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jd_Estandarizacion.setSize(new java.awt.Dimension(700, 700));

        jLabel3.setText("Estandarizacion");

        jButton11.setText("Excel");

        jButton12.setText("XLM");

        javax.swing.GroupLayout jd_EstandarizacionLayout = new javax.swing.GroupLayout(jd_Estandarizacion.getContentPane());
        jd_Estandarizacion.getContentPane().setLayout(jd_EstandarizacionLayout);
        jd_EstandarizacionLayout.setHorizontalGroup(
            jd_EstandarizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_EstandarizacionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton11)
                .addGap(239, 239, 239))
            .addGroup(jd_EstandarizacionLayout.createSequentialGroup()
                .addGap(296, 296, 296)
                .addGroup(jd_EstandarizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton12)
                    .addComponent(jLabel3))
                .addContainerGap(315, Short.MAX_VALUE))
        );
        jd_EstandarizacionLayout.setVerticalGroup(
            jd_EstandarizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_EstandarizacionLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel3)
                .addGap(196, 196, 196)
                .addComponent(jButton11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                .addComponent(jButton12)
                .addGap(258, 258, 258))
        );

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("GESTOR DE BASES DE DATOS OVAC");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jb_cargararchivo.setText("Cargar Archivo");
        jb_cargararchivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_cargararchivoMouseClicked(evt);
            }
        });

        jb_nuevoarchivo.setText("Nuevo Archivo");
        jb_nuevoarchivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_nuevoarchivoMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("GESTOR DE BASES DE DATOS OVAC");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(428, 428, 428)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jb_nuevoarchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_cargararchivo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jLabel1)
                .addGap(66, 66, 66)
                .addComponent(jb_cargararchivo)
                .addGap(87, 87, 87)
                .addComponent(jb_nuevoarchivo)
                .addContainerGap(195, Short.MAX_VALUE))
        );

        jm_archivo.setText("Opciones de Archivo");
        jm_archivo.setEnabled(false);
        jm_archivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jm_archivoMouseClicked(evt);
            }
        });

        jm_campos.setText("Campos");
        jm_campos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_camposActionPerformed(evt);
            }
        });
        jm_archivo.add(jm_campos);

        jm_registro.setText("Registros");
        jm_registro.setEnabled(false);
        jm_registro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jm_registroMouseClicked(evt);
            }
        });
        jm_archivo.add(jm_registro);

        jm_estandarizacion.setText("Estandarizacion");
        jm_estandarizacion.setEnabled(false);
        jm_archivo.add(jm_estandarizacion);

        jMenuBar1.add(jm_archivo);

        jm_guardar.setText("Guardar Archivo");
        jm_guardar.setEnabled(false);
        jm_guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jm_guardarMouseClicked(evt);
            }
        });
        jm_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_guardarActionPerformed(evt);
            }
        });
        jMenuBar1.add(jm_guardar);

        jm_exitsave.setText("Exit & Save");
        jm_exitsave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jm_exitsaveMouseClicked(evt);
            }
        });
        jm_exitsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_exitsaveActionPerformed(evt);
            }
        });
        jMenuBar1.add(jm_exitsave);

        jMenu3.setText("Exit");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        try {
            // TODO add your handling code here:
            if (flujo != null) {
                flujo.close();
            }
        } catch (IOException ex) {
        }
        System.exit(0);
    }//GEN-LAST:event_jMenu3MouseClicked

    private void jb_cargararchivoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_cargararchivoMouseClicked
        JFileChooser jf = new JFileChooser("./");

        try {
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos OVAC", "ovac");
            //FileNameExtensionFilter filtro2 = new FileNameExtensionFilter("Imagenes", "jpg", "png", "bmp");
            jf.setFileFilter(filtro);
            //jf.addChoosableFileFilter(filtro2);
            int selec = jf.showOpenDialog(this);

            if (selec == JFileChooser.APPROVE_OPTION) {
                archivo = jf.getSelectedFile();
                String path = archivo.getName();
                String pathbt = "";
                for (int i = 0; i < path.length() - 4; i++) {
                    pathbt += path.charAt(i);
                }
                System.out.println("Path para bt: " + pathbt);
                archivoBtree = new File("./" + pathbt + "ovacbt");
                flujo = new RandomAccessFile(archivo, "rw");
                flujoBtree = new RandomAccessFile(archivoBtree, "rw");
                try {
                    int cantidad = flujo.readInt();
                    for (int i = 0; i < cantidad; i++) {
                        campos.add(flujo.readUTF());
                        tiposcampos.add(flujo.readUTF());
                        sizecampos.add(flujo.readInt());
                        llaveunica.add(flujo.readBoolean());
                    }
                } catch (Exception e) {
                    System.err.println(e.getMessage());
                    System.out.println("Campos= " + campos.size());
                    System.out.println("Tipos= " + tiposcampos.size());
                    System.out.println("Tama√±os= " + sizecampos.size());
                    System.out.println("Llaves= " + llaveunica.size());
                }
                JOptionPane.showMessageDialog(this, "Archivo Cargado Exitosamente");

                // despues de que cargue el archivo valido
                jm_guardar.setEnabled(true);
                jm_archivo.setEnabled(true);
                jb_nuevoarchivo.setEnabled(false);

            } else {
                JOptionPane.showMessageDialog(this, "No Cargo Ningun Archivo");
            }

        } catch (Exception e) {
            System.err.println(e.getMessage());
        }

    }//GEN-LAST:event_jb_cargararchivoMouseClicked

    private void jb_nuevoarchivoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_nuevoarchivoMouseClicked
        try {
            if (jb_nuevoarchivo.isEnabled() == true) {
                String path = JOptionPane.showInputDialog("Ingrese el nombre del archivo: \n***Asegurese de que no existe un archivo con el mismo nombre***");

                if (path.length() != 0) {
                    archivo = new File("./" + path + ".ovac");
                    archivoBtree = new File("./" + path + ".ovacbt");
                    while (archivo.exists()) {
                        path = JOptionPane.showInputDialog("Ingrese el nombre del archivo: \n***Asegurese de que no existe un archivo con el mismo nombre***");
                        archivo = new File("./" + path + ".ovac");
                        archivoBtree = new File("./" + path + ".ovacbt");
                    }
                    try {
                        archivoBtree.createNewFile();
                        archivo.createNewFile();
                        flujo = new RandomAccessFile(archivo, "rw");
                        flujoBtree = new RandomAccessFile(archivoBtree, "rw");
                    } catch (Exception e) {
                        System.err.println(e.getMessage());
                    }
                    //despues de crear un archivo enable para guardarlo y enable para archivo
                    jb_nuevoarchivo.setEnabled(false);
                    jm_archivo.setEnabled(true);
                    jm_guardar.setEnabled(true);
                } else {
                    JOptionPane.showMessageDialog(this, "NO INGRESO UN NOMBRE VALIDO");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "NO INGRESO NADA");
        }
    }//GEN-LAST:event_jb_nuevoarchivoMouseClicked

    private void jm_archivoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jm_archivoMouseClicked

        //luego de crear un campo enable agregar a registro y estandarizacion
        jm_registro.setEnabled(true);
        jm_estandarizacion.setEnabled(true);
    }//GEN-LAST:event_jm_archivoMouseClicked

    private void jm_guardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jm_guardarMouseClicked
        /*        if (jm_guardar.isEnabled()) {
            try {
                flujo.writeLong(campos.size());
                for (int i = 0; i < campos.size(); i++) {
                    flujo.writeUTF(campos.get(i));
                    flujo.writeUTF(tiposcampos.get(i));
                    flujo.writeInt(sizecampos.get(i));
                    flujo.writeBoolean(llaveunica.get(i));
                }
                System.out.println("Tama√±o en bytes: " + flujo.length());

                flujo.close();
            } catch (IOException ex) {
                System.out.println(ex.getMessage());
            }
            campos.clear();
            sizecampos.clear();
            llaveunica.clear();
            tiposcampos.clear();
            jm_archivo.setEnabled(false);
            jm_guardar.setEnabled(false);
            jb_nuevoarchivo.setEnabled(true);
            JOptionPane.showMessageDialog(this, "Se ha guardado el archivo de manera satisfactoria!\nSe ha procedido a cerrarlo!");
        }*/
        if (flujo != null) {
            try {
                flujo.writeInt(campos.size());
                for (int i = 0; i < campos.size(); i++) {
                    flujo.writeUTF(campos.get(i));
                    flujo.writeUTF(tiposcampos.get(i));
                    flujo.writeInt(sizecampos.get(i));
                    flujo.writeBoolean(llaveunica.get(i));
                }

                flujo.close();
            } catch (IOException ex) {
                System.out.println(ex.getMessage());
            }
            campos.clear();
            sizecampos.clear();
            llaveunica.clear();
            tiposcampos.clear();
            jm_archivo.setEnabled(false);
            jm_guardar.setEnabled(false);
            jb_nuevoarchivo.setEnabled(true);
            JOptionPane.showMessageDialog(this, "Se ha guardado el archivo de manera satisfactoria!\nSe ha procedido a cerrarlo!");
        }
    }//GEN-LAST:event_jm_guardarMouseClicked

    private void jb_agregarcampoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_agregarcampoMouseClicked
        // TODO add your handling code here:
        if (campos.size() < 8) {
            String campo;
            do {
                campo = JOptionPane.showInputDialog("Ingrese el nombre del campo:\n*Menor o igual a 12 caracteres*");
            } while (campo == null || campo.equals("") || campo.length() > 12);
            String[] tipos = {"int", "String", "double", "boolean"};
            int respuesta = JOptionPane.showOptionDialog(null, "Presione el boton del tipo de dato a usar en el campo:",
                    "Seleccione un tipo", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, tipos, tipos[0]);
            String tipo = "";
            switch (respuesta) {
                case 0:
                    tipo = "int";
                    break;
                case 1:
                    tipo = "String";
                    break;
                case 2:
                    tipo = "double";
                    break;
                case 3:
                    tipo = "boolean";
                default:
                    break;
            }
            int size = -1;
            while (size < 1 || size > 15) {
                try {
                    if (tipo.equals("int")) {
                        boolean flag = false;
                        for (int i = 0; i < llaveunica.size(); i++) {
                            if (llaveunica.get(i) == true) {
                                flag = true;
                            }
                        }
                        if (flag) {
                            //Valida que la llave sea unica
                            llaveunica.add(false);
                        } else {
                            if (tipo.equals("boolean")) {
                                llaveunica.add(false);
                            } else {
                                int confirmacion = JOptionPane.showConfirmDialog(null, "El campo es una llave?", null, JOptionPane.YES_NO_OPTION);
                                if (confirmacion == JOptionPane.YES_OPTION) {
                                    llaveunica.add(true);
                                } else if (confirmacion == JOptionPane.NO_OPTION) {
                                    llaveunica.add(false);
                                }
                            }
                        }
                    } else if (tipo.equals("double") || tipo.equals("boolean")) {

                    } else {
                        size = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el tama√±o del campo entre 1-15:"));
                    }
                } catch (Exception e) {
                    size = -1;
                }
                if (size == -1) {
                    break;
                }
            }

            llaveunica.add(false);

            campos.add(campo);
            tiposcampos.add(tipo);
            sizecampos.add(size);
            JOptionPane.showMessageDialog(jd_Campos, "Se ha agregado el campo exitosamente.");
            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                    new Object[][]{},
                    new String[]{
                        "Nombre", "Tipo", "Tama√±o", "Llave Unica"
                    }
            ));
            DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
            for (int i = 0; i < campos.size(); i++) {
                if (sizecampos.get(i) != -1) {
                    Object[] row = {campos.get(i), tiposcampos.get(i), sizecampos.get(i), llaveunica.get(i)};
                    modelo.addRow(row);
                } else {
                    Object[] row = {campos.get(i), tiposcampos.get(i), "N/A", llaveunica.get(i)};
                    modelo.addRow(row);
                }
            }
            jTable1.setModel(modelo);
            jm_registro.setForeground(Color.BLACK);
            jm_estandarizacion.setForeground(Color.BLACK);

            jm_registro.setEnabled(true);
            jm_estandarizacion.setEnabled(true);

        }
    }//GEN-LAST:event_jb_agregarcampoMouseClicked

    private void jb_modificarcampoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_modificarcampoMouseClicked
        // TODO add your handling code here:
        if (campos.isEmpty()) {
            JOptionPane.showMessageDialog(jd_Campos, "No hay campos creados.");
        } else {
            String menu = "";
            for (int i = 0; i < campos.size(); i++) {
                menu += "Posicion:" + i + " " + campos.get(i) + "\n";
            }
            int opc = -1;
            while (opc < 0 || opc > campos.size()) {
                try {
                    opc = Integer.parseInt(JOptionPane.showInputDialog("Menu\n" + menu + "Ingrese la posicion de campo a modificar:"));
                } catch (Exception e) {
                    opc = -1;
                }
            }
            String campo;
            do {
                campo = JOptionPane.showInputDialog("Ingrese el nombre del campo:\n*Menor o igual a 12 caracteres*");
            } while (campo == null || campo.equals("") || campo.length() > 12);
            String[] tipos = {"int", "String", "double", "boolean"};
            int respuesta = JOptionPane.showOptionDialog(null, "Presione el boton del tipo de dato a usar en el campo:",
                    "Seleccione un tipo", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, tipos, tipos[0]);
            String tipo = "";
            switch (respuesta) {
                case 0:
                    tipo = "int";
                    break;
                case 1:
                    tipo = "String";
                    break;
                case 2:
                    tipo = "double";
                    break;
                case 3:
                    tipo = "boolean";
                default:
                    break;
            }
            int size = -1;
            while (size < 1 || size > 15) {
                try {
                    if (tipo.equals("int") || tipo.equals("double")) {

                    } else {
                        size = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el tama√±o del campo entre 1-15:"));
                    }
                } catch (Exception e) {
                    size = -1;
                }
                if (size == -1) {
                    break;
                }
            }
            boolean flag = false;
            for (int i = 0; i < llaveunica.size(); i++) {
                if (llaveunica.get(i) == true) {
                    flag = true;
                }
            }
            if (llaveunica.get(opc) == true) {
                int confirmacion = JOptionPane.showConfirmDialog(null, "El campo es una llave?", null, JOptionPane.YES_NO_OPTION);
                if (confirmacion == JOptionPane.YES_OPTION) {
                    llaveunica.remove(opc);
                    llaveunica.add(opc, true);
                } else if (confirmacion == JOptionPane.NO_OPTION) {
                    llaveunica.remove(opc);
                    llaveunica.add(opc, false);
                    System.out.println("Entra Modificar");
                }
            }
            if (flag) {
                //Valida que la llave sea unica
            } else {
                int confirmacion = JOptionPane.showConfirmDialog(null, "El campo es una llave?", null, JOptionPane.YES_NO_OPTION);
                if (confirmacion == JOptionPane.YES_OPTION) {
                    llaveunica.remove(opc);
                    llaveunica.add(opc, true);
                } else if (confirmacion == JOptionPane.NO_OPTION) {
                    llaveunica.remove(opc);
                    llaveunica.add(opc, false);
                    System.out.println("Entra Modificar");
                }
            }
            campos.remove(opc);
            campos.add(opc, campo);
            tiposcampos.remove(opc);
            tiposcampos.add(opc, tipo);
            sizecampos.remove(opc);
            sizecampos.add(opc, size);
            JOptionPane.showMessageDialog(jd_Campos, "Se ha modificado el campo exitosamente.");
        }
    }//GEN-LAST:event_jb_modificarcampoMouseClicked

    private void jb_listarcampoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_listarcampoMouseClicked
        // TODO add your handling code here:
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Nombre", "Tipo", "Tama√±o", "Llave Unica"
                }
        ));
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        for (int i = 0; i < campos.size(); i++) {
            if (sizecampos.get(i) != -1) {
                Object[] row = {campos.get(i), tiposcampos.get(i), sizecampos.get(i), llaveunica.get(i)};
                modelo.addRow(row);
            } else {
                Object[] row = {campos.get(i), tiposcampos.get(i), "N/A", llaveunica.get(i)};
                modelo.addRow(row);
            }
        }
        jTable1.setModel(modelo);
        JOptionPane.showMessageDialog(jd_Campos, "Se ha completado la lista de campos.");
    }//GEN-LAST:event_jb_listarcampoMouseClicked

    private void jb_borrarcampoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_borrarcampoMouseClicked
        // TODO add your handling code here:
        if (campos.isEmpty()) {
            JOptionPane.showMessageDialog(jd_Campos, "No hay campos creados.");
        } else {
            String menu = "";
            for (int i = 0; i < campos.size(); i++) {
                menu += "Posicion:" + i + " " + campos.get(i) + "\n";
            }
            int opc = -1;
            while (opc < 0 || opc > campos.size()) {
                try {
                    opc = Integer.parseInt(JOptionPane.showInputDialog("Menu\n" + menu + "Ingrese la posicion de campo a borrar:"));
                } catch (Exception e) {
                    opc = -1;
                }
            }
            campos.remove(opc);
            sizecampos.remove(opc);
            llaveunica.remove(opc);
            tiposcampos.remove(opc);
            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                    new Object[][]{},
                    new String[]{
                        "Nombre", "Tipo", "Tama√±o", "Llave Unica"
                    }
            ));
            DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
            for (int i = 0; i < campos.size(); i++) {
                if (sizecampos.get(i) != -1) {
                    Object[] row = {campos.get(i), tiposcampos.get(i), sizecampos.get(i), llaveunica.get(i)};
                    modelo.addRow(row);
                } else {
                    Object[] row = {campos.get(i), tiposcampos.get(i), "N/A", llaveunica.get(i)};
                    modelo.addRow(row);
                }
            }
            jTable1.setModel(modelo);
            JOptionPane.showMessageDialog(jd_Campos, "Se ha borrado el campo exitosamente.");
        }
    }//GEN-LAST:event_jb_borrarcampoMouseClicked

    private void jb_regresarcamposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_regresarcamposMouseClicked
        // TODO add your handling code here:
        boolean flag = false;
        for (int i = 0; i < llaveunica.size(); i++) {
            if (llaveunica.get(i) == true) {
                flag = true;
                break;
            }
        }
        if (flag) {
            jd_Campos.dispose();
            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                    new Object[][]{},
                    new String[]{
                        "Nombre", "Tipo", "Tama√±o", "Llave Unica"
                    }
            ));
        } else {
            JOptionPane.showMessageDialog(jd_Campos, "Debe tener al menos un campo que sea llave!\nIntente de nuevo luego de crear un campo llave\nSi llego al maximo de campos se recomienda borrar o modificar un campo!");
        }
    }//GEN-LAST:event_jb_regresarcamposMouseClicked

    private void jm_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_guardarActionPerformed
        // TODO add your handling code here:
        /*if (jm_guardar.isEnabled()) {
            try {
                flujo.writeInt(campos.size());
                for (int i = 0; i < campos.size(); i++) {
                    flujo.writeUTF(campos.get(i));
                    flujo.writeUTF(tiposcampos.get(i));
                    flujo.writeInt(sizecampos.get(i));
                    flujo.writeBoolean(llaveunica.get(i));
                }

                flujo.close();
            } catch (IOException ex) {
                System.out.println(ex.getMessage());
            }
            campos.clear();
            sizecampos.clear();
            llaveunica.clear();
            tiposcampos.clear();
            jm_archivo.setEnabled(false);
            jm_guardar.setEnabled(false);
            jb_nuevoarchivo.setEnabled(true);
            JOptionPane.showMessageDialog(this, "Se ha guardado el archivo de manera satisfactoria!\nSe ha procedido a cerrarlo!");
        }*/
        if (flujo != null) {
            try {
                flujo.writeInt(campos.size());
                for (int i = 0; i < campos.size(); i++) {
                    flujo.writeUTF(campos.get(i));
                    flujo.writeUTF(tiposcampos.get(i));
                    flujo.writeInt(sizecampos.get(i));
                    flujo.writeBoolean(llaveunica.get(i));
                }

                flujo.close();
            } catch (IOException ex) {
                System.out.println(ex.getMessage());
            }
            campos.clear();
            sizecampos.clear();
            llaveunica.clear();
            tiposcampos.clear();
            jm_archivo.setEnabled(false);
            jm_guardar.setEnabled(false);
            jb_nuevoarchivo.setEnabled(true);
            JOptionPane.showMessageDialog(this, "Se ha guardado el archivo de manera satisfactoria!\nSe ha procedido a cerrarlo!");
        }
    }//GEN-LAST:event_jm_guardarActionPerformed

    private void jm_registroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jm_registroMouseClicked
        jd_Registro.setModal(true);
        jd_Registro.pack();
        jd_Registro.setLocationRelativeTo(this);
        jd_Registro.setVisible(true);
    }//GEN-LAST:event_jm_registroMouseClicked

    private void jm_camposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_camposActionPerformed
        // TODO add your handling code here:
        jd_Campos.setModal(true);
        jd_Campos.pack();
        jd_Campos.setLocationRelativeTo(this);
        jd_Campos.setVisible(true);
    }//GEN-LAST:event_jm_camposActionPerformed

    private void jm_exitsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_exitsaveActionPerformed
        // TODO add your handling code here:
        if (flujo != null) {
            try {
                flujo.writeInt(campos.size());
                for (int i = 0; i < campos.size(); i++) {
                    flujo.writeUTF(campos.get(i));
                    flujo.writeUTF(tiposcampos.get(i));
                    flujo.writeInt(sizecampos.get(i));
                    flujo.writeBoolean(llaveunica.get(i));
                }

                flujo.close();
            } catch (IOException ex) {
                System.out.println(ex.getMessage());
            }
            campos.clear();
            sizecampos.clear();
            llaveunica.clear();
            tiposcampos.clear();
            jm_archivo.setEnabled(false);
            jm_guardar.setEnabled(false);
            jb_nuevoarchivo.setEnabled(true);
            JOptionPane.showMessageDialog(this, "Se ha guardado el archivo de manera satisfactoria!\nSe ha procedido a cerrarlo!");
        }
        System.exit(0);
    }//GEN-LAST:event_jm_exitsaveActionPerformed

    private void jm_exitsaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jm_exitsaveMouseClicked
        // TODO add your handling code here:
        if (flujo != null) {
            try {
                flujo.writeInt(campos.size());
                for (int i = 0; i < campos.size(); i++) {
                    flujo.writeUTF(campos.get(i));
                    flujo.writeUTF(tiposcampos.get(i));
                    flujo.writeInt(sizecampos.get(i));
                    flujo.writeBoolean(llaveunica.get(i));
                }

                flujo.close();
            } catch (IOException ex) {
                System.out.println(ex.getMessage());
            }
            campos.clear();
            sizecampos.clear();
            llaveunica.clear();
            tiposcampos.clear();
            jm_archivo.setEnabled(false);
            jm_guardar.setEnabled(false);
            jb_nuevoarchivo.setEnabled(true);
            JOptionPane.showMessageDialog(this, "Se ha guardado el archivo de manera satisfactoria!\nSe ha procedido a cerrarlo!");
        }
        System.exit(0);
    }//GEN-LAST:event_jm_exitsaveMouseClicked

    private void jb_regresarcamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_regresarcamposActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_regresarcamposActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jb_agregarcampo;
    private javax.swing.JButton jb_borrarcampo;
    private javax.swing.JButton jb_cargararchivo;
    private javax.swing.JButton jb_listarcampo;
    private javax.swing.JButton jb_modificarcampo;
    private javax.swing.JButton jb_nuevoarchivo;
    private javax.swing.JButton jb_regresarcampos;
    private javax.swing.JDialog jd_Campos;
    private javax.swing.JDialog jd_Estandarizacion;
    private javax.swing.JDialog jd_Registro;
    private javax.swing.JMenu jm_archivo;
    private javax.swing.JMenuItem jm_campos;
    private javax.swing.JMenuItem jm_estandarizacion;
    private javax.swing.JMenu jm_exitsave;
    private javax.swing.JMenu jm_guardar;
    private javax.swing.JMenuItem jm_registro;
    // End of variables declaration//GEN-END:variables
    private File archivo = null;
    private File archivoBtree = null;
    private int avail = 0;
    private RandomAccessFile flujo = null;
    private RandomAccessFile flujoBtree = null;
    ArrayList<String> campos = new ArrayList();
    ArrayList<String> tiposcampos = new ArrayList();
    ArrayList<Integer> sizecampos = new ArrayList();
    ArrayList<Boolean> llaveunica = new ArrayList();
}
